/* stylelint-disable */
/*! normalize.css v4.1.1 | MIT License | github.com/necolas/normalize.css */
/**
 * 1. Change the default font family in all browsers (opinionated).
 * 2. Prevent adjustments of font size after orientation changes in IE and iOS.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove the margin in all browsers (opinionated).
 */
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 * 1. Add the correct display in Edge, IE, and Firefox.
 * 2. Add the correct display in IE.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
main,
menu,
nav,
section,
summary {
  /* 1 */
  display: block; }

/**
 * Add the correct display in IE 9-.
 */
audio,
canvas,
progress,
video {
  display: inline-block; }

/**
 * Add the correct display in iOS 4-7.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline; }

/**
 * Add the correct display in IE 10-.
 * 1. Add the correct display in IE.
 */
template,
[hidden] {
  display: none; }

/* Links
   ========================================================================== */
/**
 * 1. Remove the gray background on active links in IE 10.
 * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
 */
a {
  background-color: transparent;
  /* 1 */
  -webkit-text-decoration-skip: objects;
  /* 2 */ }

/**
 * Remove the outline on focused links when they are also active or hovered
 * in all browsers (opinionated).
 */
a:active,
a:hover {
  outline-width: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * 1. Remove the bottom border in Firefox 39-.
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  text-decoration: underline dotted;
  /* 2 */ }

/**
 * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
 */
b,
strong {
  font-weight: inherit; }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * Add the correct font style in Android 4.3-.
 */
dfn {
  font-style: italic; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Add the correct background and color in IE 9-.
 */
mark {
  background-color: #ff0;
  color: #000; }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10-.
 */
img {
  border-style: none; }

/**
 * Hide the overflow in IE.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct margin in IE 8.
 */
figure {
  margin: 1em 40px; }

/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/* Forms
   ========================================================================== */
/**
 * 1. Change font properties to `inherit` in all browsers (opinionated).
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
select,
textarea {
  font: inherit;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
 * Restore the font weight unset by the previous rule.
 */
optgroup {
  font-weight: bold; }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
 *    controls in Android 4.
 * 2. Correct the inability to style clickable types in iOS and Safari.
 */
button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
  /* 2 */ }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Change the border, margin, and padding in all browsers (opinionated).
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * Remove the default vertical scrollbar in IE.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10-.
 * 2. Remove the padding in IE 10-.
 */
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding and cancel buttons in Chrome and Safari on OS X.
 */
[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Correct the text style of placeholders in Chrome, Edge, and Safari.
 */
::-webkit-input-placeholder {
  color: inherit;
  opacity: 0.54; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/* glue: 0.11.1 hash: a1a781fb06 */
@font-face {
  font-family: "PlainScriptCTT";
  src: url("../fonts/plainscript/PlainScriptCTT.eot");
  src: url("../fonts/plainscript/PlainScriptCTT.eot?#iefix") format("embedded-opentype"), url("../fonts/plainscript/PlainScriptCTT.woff") format("woff"), url("../fonts/plainscript/PlainScriptCTT.ttf") format("truetype"), url("../fonts/plainscript/PlainScriptCTT.svg#PlainScriptCTT") format("svg"); }

@font-face {
  font-family: "Panton SemiBold";
  src: url("../fonts/panton/Panton-SemiBold.eot");
  src: url("../fonts/panton/Panton-SemiBold.eot?#iefix") format("embedded-opentype"), url("../fonts/panton/Panton-SemiBold.woff") format("woff"), url("../fonts/panton/Panton-SemiBold.ttf") format("truetype"), url("../fonts/panton/Panton-SemiBold.svg#PantonSemiBold") format("svg"); }

* {
  box-sizing: border-box; }

*::before,
*::after {
  box-sizing: border-box; }

html,
body {
  height: 100%; }

body {
  background-color: #fff;
  font-family: "PlainScriptCTT", sans-serif;
  font-size: 16px;
  color: #ef4044; }

button {
  cursor: pointer; }

a {
  color: #ef4044;
  text-decoration: none; }

.container {
  margin-right: auto;
  margin-left: auto; }
  .container::after {
    content: "";
    display: table;
    clear: both; }
  .container::before {
    content: "";
    display: table; }
  @media (max-width: 1120px) {
    .container {
      padding: 0 15px; } }

@media (min-width: 1120px) {
  .container {
    width: 1090px; } }

.grid {
  margin: 0; }
  .grid::after {
    content: "";
    display: table;
    clear: both; }
  .grid::before {
    content: "";
    display: table; }

[class*='col-'] {
  position: relative;
  float: left;
  width: 100%;
  padding-right: 0; }
  .grid [class*='col-']:last-of-type {
    padding-right: 0; }

@media (min-width: 480px) {
  .col-xs-1-2 {
    width: 50%; }
  .col-xs-1-3 {
    width: 33.3333333%; } }

@media (min-width: 768px) {
  .col-sm-1-2 {
    width: 50%; }
  .col-sm-1-3 {
    width: 33.3333333%; }
  .col-sm-1-4 {
    width: 25%; } }

@media (min-width: 991px) {
  .col-md-2-3 {
    width: 66.666666%; }
  .col-md-1-3 {
    width: 33.3333333%; }
  .col-md-1-2 {
    width: 50%; }
  .col-md-1-2-push {
    left: 50%; }
  .col-md-1-2-pull {
    right: 50%; }
  .col-md-1-4 {
    width: 25%; }
  .col-md-1-5 {
    width: 20%; }
  .col-md-3-4 {
    width: 75%; }
  .col-md-1-8 {
    width: 12.5%; } }

@media (min-width: 1120px) {
  .col-lg-2-3 {
    width: 66.666666%; }
  .col-lg-1-3 {
    width: 33.3333333%; }
  .col-lg-1-2 {
    width: 50%; }
  .col-lg-1-2-push {
    left: 50%; }
  .col-lg-1-2-pull {
    right: 50%; }
  .col-lg-1-4 {
    width: 25%; }
  .col-lg-3-4 {
    width: 75%; }
  .col-lg-1-8 {
    width: 12.5%; } }

/* Opt-in outside padding */
.grid-pad {
  padding: 0 0 0 0; }
  .grid-pad [class*='col-']:last-of-type {
    padding-right: 0; }

.badges {
  margin-top: 55px;
  text-align: left; }

.badge {
  display: inline-block;
  margin: 0 25px; }
  .badge:first-child {
    margin-left: 0; }
  .badge:last-child {
    margin-right: 0; }
  .badge--md {
    font-size: 20px; }
  .badge--md-6 .badge__icon {
    background-repeat: no-repeat;
    background-position: -60px -150px;
    width: 38px;
    height: 60px;
    background-size: 541px 216px; }
  .badge--md-5 .badge__icon {
    background-repeat: no-repeat;
    background-position: -102px -150px;
    width: 38px;
    height: 60px;
    background-size: 541px 216px; }
  .badge--md-4 .badge__icon {
    background-repeat: no-repeat;
    background-position: -2px -150px;
    width: 54px;
    height: 64px;
    background-size: 541px 216px; }
  .badge__icon {
    display: inline-block;
    background-image: url("../img/sprite/for_sprite.png");
    vertical-align: middle; }
  .badge__text {
    display: inline-block;
    vertical-align: middle; }
    .badge__text span {
      display: block; }

.breadcrumbs {
  margin: 0;
  padding: 0;
  list-style-type: none; }
  .breadcrumbs--header {
    margin-top: 95px; }
  .breadcrumbs__item {
    display: inline-block; }
    .breadcrumbs__item:not(:last-child)::after {
      content: '/';
      margin-left: 8px;
      color: #282828; }
  .breadcrumbs__link {
    color: #282828;
    font-family: "Panton SemiBold", sans-serif;
    font-size: 16px;
    font-weight: 400; }

.header {
  padding-top: 45px; }
  .header__logo {
    display: inline-block;
    background-image: url("../img/sprite/for_sprite.png");
    background-repeat: no-repeat;
    background-position: -2px -2px;
    width: 537px;
    height: 144px;
    background-size: 541px 216px; }
  .header__right {
    padding-left: 65px; }

.header-nav__list {
  margin: 0;
  padding: 0;
  list-style-type: none;
  display: inline-block; }

.header-nav__item {
  display: inline-block;
  margin: 0 24px; }
  .header-nav__item:first-child {
    margin-left: 0; }
  .header-nav__item:last-child {
    margin-right: 0; }

.header-nav__link {
  position: relative;
  font-size: 24px; }
  .header-nav__link--active::before {
    display: inline-block;
    background-image: url("../img/sprite/for_sprite.png");
    background-repeat: no-repeat;
    background-position: -162px -150px;
    width: 14px;
    height: 37px;
    background-size: 541px 216px;
    position: absolute;
    top: 50%;
    -webkit-transform: translate(0, -50%);
        -ms-transform: translate(0, -50%);
            transform: translate(0, -50%);
    content: '';
    left: -20px; }
  .header-nav__link--active::after {
    display: inline-block;
    background-image: url("../img/sprite/for_sprite.png");
    background-repeat: no-repeat;
    background-position: -144px -150px;
    width: 14px;
    height: 37px;
    background-size: 541px 216px;
    position: absolute;
    top: 50%;
    -webkit-transform: translate(0, -50%);
        -ms-transform: translate(0, -50%);
            transform: translate(0, -50%);
    content: '';
    right: -20px; }

/*# sourceMappingURL=data:application/json;base64, */
